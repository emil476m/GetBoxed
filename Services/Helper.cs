using Dapper;
using Npgsql;

namespace Service;

public class Helper
{
    
    public static readonly NpgsqlDataSource DataSource;
    static Helper()
    {
        string envVarKeyName = "pgconn";
        string rawConnectionString;
        rawConnectionString = Environment.GetEnvironmentVariable(envVarKeyName)!;
        
        
        try
        {
            
            DataSource =
                new NpgsqlDataSourceBuilder(rawConnectionString).Build();
            DataSource.OpenConnection().Close();
        }
        catch (Exception e)
        {
            throw new Exception($@"
connection string not found", e);
        }
    }
    
    
    public static void TriggerRebuild()
    {
        using (var conn = DataSource.OpenConnection())
        {
            try
            {
                conn.Execute(RebuildScript);
            }
            catch (Exception e)
            {
                throw new Exception($@"
THERE WAS AN ERROR REBUILDING THE DATABASE.
", e);
            }
        }
    }
    
    
    
    public static string RebuildScript = @"
DROP SCHEMA IF EXISTS getboxed CASCADE;
CREATE SCHEMA getboxed;
create table if not exists box
(
    boxid       integer generated by default as identity,
    name        text,
    size            text,
    description          text,
    price         FLOAT,        
    boximgurl text,
    constraint boxpk
        primary key (boxid)
);
 ";
}